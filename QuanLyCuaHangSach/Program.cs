using Microsoft.AspNetCore.Authentication.Cookies;
using Microsoft.EntityFrameworkCore;
using QuanLyCuaHangSach.Context;
using QuanLyCuaHangSach.Models.Momo;
using QuanLyCuaHangSach.Services;



var builder = WebApplication.CreateBuilder(args);
//Momo API Payment

// üõ†Ô∏è Th√™m d·ªãch v·ª• MVC
builder.Services.AddControllersWithViews();

builder.Services.Configure<MomoOptionModel>(builder.Configuration.GetSection("MomoAPI"));
builder.Services.AddScoped<IMomoService, MomoService>();
// ‚úÖ C·∫•u h√¨nh x√°c th·ª±c b·∫±ng Cookie Authentication
builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options =>
    {
        options.LoginPath = "/DangNhap/Index"; // Trang ƒëƒÉng nh·∫≠p
        options.AccessDeniedPath = "/Home/AccessDenied"; // Trang b·ªã ch·∫∑n quy·ªÅn
    });

// ‚úÖ C·∫•u h√¨nh Entity Framework v·ªõi SQL Server
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

// ‚úÖ C·∫•u h√¨nh Session (L∆∞u tr·ªØ th√¥ng tin ƒëƒÉng nh·∫≠p, gi·ªè h√†ng, v.v.)
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(30); // Th·ªùi gian session t·ªìn t·∫°i
    options.Cookie.HttpOnly = true; // B·∫£o m·∫≠t cookie (ch·ªâ d√πng HTTP)
    options.Cookie.IsEssential = true; // Cookie lu√¥n ƒë∆∞·ª£c l∆∞u
});



var app = builder.Build();




// ‚úÖ K√≠ch ho·∫°t Session
app.UseSession();

// üî• Middleware x·ª≠ l√Ω l·ªói (n·∫øu kh√¥ng ·ªü m√¥i tr∆∞·ªùng Development)
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error"); // Trang l·ªói chung
    app.UseHsts(); // TƒÉng c∆∞·ªùng b·∫£o m·∫≠t v·ªõi HSTS (HTTPS Strict Transport Security)
}

// ‚úÖ Middleware x·ª≠ l√Ω HTTP & Static Files
app.UseHttpsRedirection(); // Chuy·ªÉn h∆∞·ªõng HTTP sang HTTPS
app.UseStaticFiles(); // Cho ph√©p truy c·∫≠p t·ªáp tƒ©nh (CSS, JS, h√¨nh ·∫£nh)

// ‚úÖ C·∫•u h√¨nh ƒë·ªãnh tuy·∫øn
app.UseRouting();

// ‚úÖ B·∫Øt bu·ªôc x√°c th·ª±c tr∆∞·ªõc khi ki·ªÉm tra quy·ªÅn truy c·∫≠p
app.UseAuthentication();
app.UseAuthorization();

// ‚úÖ C·∫•u h√¨nh route m·∫∑c ƒë·ªãnh
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=TrangChu}/{action=Index}/{id?}");

// üî• Ch·∫°y ·ª©ng d·ª•ng
app.Run();
